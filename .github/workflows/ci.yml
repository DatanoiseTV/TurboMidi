name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y g++ lcov
    
    - name: Compile tests with coverage
      run: |
        g++ -std=c++11 --coverage -fprofile-arcs -ftest-coverage tests.cpp -o tests
    
    - name: Run tests
      run: ./tests
    
    - name: Generate coverage report
      run: |
        lcov --capture --directory . --output-file coverage.info
        lcov --remove coverage.info '/usr/*' --output-file coverage.info
        lcov --list coverage.info

  test-multiple-platforms:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        compiler: [g++, clang++]
        exclude:
          - os: windows-latest
            compiler: clang++
    
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Compile tests (Unix)
      if: matrix.os != 'windows-latest'
      run: |
        ${{ matrix.compiler }} -std=c++11 tests.cpp -o tests
    
    - name: Compile tests (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        g++ -std=c++11 tests.cpp -o tests.exe
    
    - name: Run tests (Unix)
      if: matrix.os != 'windows-latest'
      run: ./tests
    
    - name: Run tests (Windows)
      if: matrix.os == 'windows-latest'
      run: ./tests.exe